Starting weekly assessment for Dominic, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.50 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My QMEE Repo
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox, Results

Found the following files: README.txt

Checking for readme file in weekly directory...

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My QMEE Bootcamp Repository for Week 1

The excercises for Unix week.

Contents:

####Code#####

Contains the excercises for Week 1.
	
boilerplate.sh - A basic boilerplate template.
ConcatenateTwoFiles.sh - Concatenates two files and outputs the result.
CountLines.sh - Counts the number of lines in a text file.
csvtospace.sh - Takes a comma separated valued file and converts it to a space delimited file.
MyExampleScript.sh - Prints the name of the user twice.
tabtocsv.sh - substitute the tabs in the files with commas saves the output to a .csv files.
UnixPrac1.txt - A text file with bash commands performing simple tasks on the E. coli genome.
variables.sh - A short script demonstrating how to use variables.

####Data####

Contains data for use in Week 1 practicles.

fasta - Contains three files containing genome sequences.
      ----> 407228326.fasta - Homo sapiens x Mus musculus hybrid cell line GM11713 FHIT gene, 	          intron 3, partial sequence, including PATRR3 region.
      ----> 407228412.fasta - Homo sapiens tryptase beta 2 (gene/pseudogene)                	        (TPSB2), RefSeqGene on chromosome 16.
      ----> E.coli.fasta - The E. coli genome.
spawannxs.txt - List of Species of Marine and Coastal Flora Protected Under Article 11(1)(a)

####Results####

Empty repositroy where results may be sent.

####Sandbox####

Assorted toy examples.
**********************************************************************

Found following files in results directory: README.txt...
Found 15 code files: ConcatenateTwoFiles.sh, .txt, UnixPrac1.sh, FirstBiblio.tex, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

Found the following extra files: FirstExample.blg, FirstExample.bbl, FirstExample.pdf
0.5 pt deducted per extra file

Current Points = 98.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Dominic Brass
#Script: ConcatenateTwoFiles.sh
#Desc: Concatenates two files and outputs the result.
#Arguements: Takes two files
#Date: Oct 2018

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 8: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 9: $3: ambiguous redirect

======================================================================
Inspecting script file .txt...

File contents are:
**********************************************************************
**********************************************************************

Testing .txt...

======================================================================
Inspecting script file UnixPrac1.sh...

File contents are:
**********************************************************************
#Author: Dominic
#Script: Unixprac.txt
#Desc: Performs series of tasks on the E. coli genome.
#Arguements: None
#Date: Oct 2018

#1. Counts the lines in each file.

find ../Data/fasta -type f -name "*.fasta" | while read FILE; do echo "The file $FILE has $(wc -l < $FILE) lines." ; done 

#2. Prints everything from the second line of the E. coli genome.

echo "The second line of E.coli.fasta is: $(sed '2q;d' ../Data/fasta/E.coli.fasta)"  

#3. Counts the sequence length of the genome.

echo "The sequence length of E. coli's genome is $(sed -n '1!p' ../Data/fasta/E.coli.fasta| tr -d '\n' | wc -c)"

#4. Counts the matches of a partilcular sequence.

echo "The string 'ATGC' occurs $(sed -n '1!p' < ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -o "ATGC" | wc -l) times."

#5. Computes the AT/GC ratio.

bc -l <<< "$(($(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "A" | wc -l)+$(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "T" | wc -l)))/$(($(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "G" | wc -l)+$(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "C" | wc -l)))"**********************************************************************

Testing UnixPrac1.sh...

Output (only first 500 characters): 

**********************************************************************
The file ../Data/fasta/407228412.fasta has 127 lines.
The file ../Data/fasta/407228326.fasta has 28 lines.
The file ../Data/fasta/E.coli.fasta has 78104 lines.
The second line of E.coli.fasta is: AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTC
The sequence length of E. coli's genome is 4686137
The string 'ATGC' occurs 21968 times.
.96922822848944879586

**********************************************************************

Code ran without errors

Time consumed = 1.52531s

======================================================================
Inspecting script file FirstBiblio.tex...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content?},
  author={Einstein, A.},
  journal={Annalen der Physik},
  volume={18},
  pages={639--641},
  year={1905}
}**********************************************************************

Testing FirstBiblio.tex...

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Dominic Brass
#Script: CountLines.sh
#Desc: Takes a file and counts the number of lines.
#Arguements: One file.
#Date: Oct 2018

NumLines=$(wc -l < $1)
echo "The file $1 has $NumLines lines"
echo**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error:
CountLines.sh: line 8: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#Author: Dominic
#Script: variables.sh
#Desc: A short script demonstrating how to use variables.
#Arguements: None.
#Date: Oct 2018

MyVar='some string'
echo 'the current value of the variable is ' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is ' $MyVar
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a ' and '$b$'. Their sum is:'
mysum=$(($a + $b))
echo $mysum**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is  some string
Please enter a new string
the current value of the variable is 
Enter two numbers separated by space(s)
you entered  and . Their sum is:


**********************************************************************

Encountered error:
variables.sh: line 15: + : syntax error: operand expected (error token is "+ ")

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#Author: Dominic
#Script: CompileLatex.sh
#Desc: Compiles latex documents.
#saves the output to a .csv files
#Arguements: 1 -> *.tex 1 -> *.bib.
#Date: Oct 2018

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
evince $1.pdf &

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory

** (evince:28413): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2018-19/Coursework/StudentRepos/DominicBrass_NA/Week1/Code/.pdf': No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

** (evince:28413): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#Author: Dominic
#Script: tiff2png.sh
#Desc: Converts a tiff to a png.
#Arguements: 1-> tiff files.
#Date: Oct 2018

for f in *.tif;
    do
        echo "Converting $f";
        convert "$f"  "$(basename "$f" .tif).jpg";
    done    **********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error:
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.jpg' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Dominic
#Script: csvtospace.sh
#Desc: Takes a comma separated valued file and converts it to a space delimited file.
#Arguements: 1-> csv file.
#Date: Oct 2018

echo "Creating a space separated version of $1 ..."
cat $1 | tr -s "," " " >> $1.txt
echo "Done!"
exit**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a space separated version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.01443s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Your Name}
\date{}
\begin{document}
  \maketitle

  \begin{abstract}
    This paper must be cool!
  \end{abstract}

  \section{Introduction}
    Blah Blah!

  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}.

  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Dominic
#Script: MyExampleScript.sh
#Desc: Prints the name of the user twice.
#Arguements: None.
#Date: Oct 2018

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00863s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content?},
  author={Einstein, A.},
  journal={Annalen der Physik},
  volume={18},
  pages={639--641},
  year={1905}
}**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#Author: Dominic
#Script: Unixprac.txt
#Desc: Performs series of tasks on the E. coli genome.
#Arguements: None
#Date: Oct 2018

#1. Counts the lines in each file.

find ../Data/fasta -type f -name "*.fasta" | while read FILE; do echo "The file $FILE has $(wc -l < $FILE) lines." ; done 

#2. Prints everything from the second line of the E. coli genome.

echo "The second line of E.coli.fasta is: $(sed '2q;d' ../Data/fasta/E.coli.fasta)"  

#3. Counts the sequence length of the genome.

echo "The sequence length of E. coli's genome is $(sed -n '1!p' ../Data/fasta/E.coli.fasta| tr -d '\n' | wc -c)"

#4. Counts the matches of a partilcular sequence.

echo "The string 'ATGC' occurs $(sed -n '1!p' < ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -o "ATGC" | wc -l) times."

#5. Computes the AT/GC ratio.

bc -l <<< "$(($(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "A" | wc -l)+$(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "T" | wc -l)))/$(($(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "G" | wc -l)+$(tr -d '\n' < ../Data/fasta/E.coli.fasta | grep -o "C" | wc -l)))"**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#Author: Dominic
#Script: tabtocsv.sh
#Desc: substitute the tabs in the files with commas
#saves the output to a .csv files
#Arguements: 1-> tab delimited files.
#Date: Oct 2018

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.01278s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Dominic Brass
#Script: boilerplate.sh
#Desc: Simple boilerplate for shell scripts
#Arguements: none
#Date: Oct 2018

echo -e "\nThis is a shell script! \n"

#exit**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00935s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 98.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!